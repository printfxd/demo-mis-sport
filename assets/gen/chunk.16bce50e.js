const o=(s,t)=>s&&(t(s)?s:o(s.parentNode,t)),n=s=>{const t=o(s.target,r=>r.classList.contains("card"));if(!t)return;const e=t.querySelector("img");e&&(s.type==="mouseenter"?(t.classList.add("zoom-in"),e.dataset.hoverSrc&&(e.src=e.dataset.hoverSrc)):s.type==="mouseout"&&(t.classList.remove("zoom-in"),e.dataset.src&&(e.src=e.dataset.src)))},i=s=>{const t=o(s.target,r=>r.classList.contains("card"));if(!t)return;const e=t.querySelector("img");e&&(t.classList.remove("zoom-in"),e.dataset.src&&(e.src=e.dataset.src))},a=s=>{const t=s&&s.target;if(!t)return;const e=t.selectedIndex==null?-1:t.selectedIndex;let r=t.parentNode;for(;r!=null&&r.tagName!=="SECTION";)r=r==r.parentNode?null:r.parentNode;if(!r)return;const c=r.querySelectorAll("li.title")[e];c&&c.dispatchEvent(new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window}))},d=()=>{window.onClickProductCard=i,window.onHoverProductCard=n,window.onTabSelected=a},l={init:d};export{l as p};
